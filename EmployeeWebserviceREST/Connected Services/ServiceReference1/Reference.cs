//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace EmployeeWebserviceREST.ServiceReference1 {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Employee", Namespace="http://schemas.datacontract.org/2004/07/EmployeeWebserviceREST")]
    [System.SerializableAttribute()]
    public partial class Employee : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AddressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int AgeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FirsNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LastNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int empIDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Address {
            get {
                return this.AddressField;
            }
            set {
                if ((object.ReferenceEquals(this.AddressField, value) != true)) {
                    this.AddressField = value;
                    this.RaisePropertyChanged("Address");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Age {
            get {
                return this.AgeField;
            }
            set {
                if ((this.AgeField.Equals(value) != true)) {
                    this.AgeField = value;
                    this.RaisePropertyChanged("Age");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FirsName {
            get {
                return this.FirsNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FirsNameField, value) != true)) {
                    this.FirsNameField = value;
                    this.RaisePropertyChanged("FirsName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LastName {
            get {
                return this.LastNameField;
            }
            set {
                if ((object.ReferenceEquals(this.LastNameField, value) != true)) {
                    this.LastNameField = value;
                    this.RaisePropertyChanged("LastName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int empID {
            get {
                return this.empIDField;
            }
            set {
                if ((this.empIDField.Equals(value) != true)) {
                    this.empIDField = value;
                    this.RaisePropertyChanged("empID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference1.IEmployeeNew")]
    public interface IEmployeeNew {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmployeeNew/GetProductList", ReplyAction="http://tempuri.org/IEmployeeNew/GetProductListResponse")]
        EmployeeWebserviceREST.ServiceReference1.Employee[] GetProductList();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmployeeNew/GetProductList", ReplyAction="http://tempuri.org/IEmployeeNew/GetProductListResponse")]
        System.Threading.Tasks.Task<EmployeeWebserviceREST.ServiceReference1.Employee[]> GetProductListAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmployeeNew/AddEmployee", ReplyAction="http://tempuri.org/IEmployeeNew/AddEmployeeResponse")]
        bool AddEmployee(EmployeeWebserviceREST.ServiceReference1.Employee eml);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmployeeNew/AddEmployee", ReplyAction="http://tempuri.org/IEmployeeNew/AddEmployeeResponse")]
        System.Threading.Tasks.Task<bool> AddEmployeeAsync(EmployeeWebserviceREST.ServiceReference1.Employee eml);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmployeeNew/UpdateEmployee", ReplyAction="http://tempuri.org/IEmployeeNew/UpdateEmployeeResponse")]
        bool UpdateEmployee(EmployeeWebserviceREST.ServiceReference1.Employee eml);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmployeeNew/UpdateEmployee", ReplyAction="http://tempuri.org/IEmployeeNew/UpdateEmployeeResponse")]
        System.Threading.Tasks.Task<bool> UpdateEmployeeAsync(EmployeeWebserviceREST.ServiceReference1.Employee eml);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmployeeNew/DeleteEmployee", ReplyAction="http://tempuri.org/IEmployeeNew/DeleteEmployeeResponse")]
        bool DeleteEmployee(int idE);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmployeeNew/DeleteEmployee", ReplyAction="http://tempuri.org/IEmployeeNew/DeleteEmployeeResponse")]
        System.Threading.Tasks.Task<bool> DeleteEmployeeAsync(int idE);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IEmployeeNewChannel : EmployeeWebserviceREST.ServiceReference1.IEmployeeNew, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class EmployeeNewClient : System.ServiceModel.ClientBase<EmployeeWebserviceREST.ServiceReference1.IEmployeeNew>, EmployeeWebserviceREST.ServiceReference1.IEmployeeNew {
        
        public EmployeeNewClient() {
        }
        
        public EmployeeNewClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public EmployeeNewClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public EmployeeNewClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public EmployeeNewClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public EmployeeWebserviceREST.ServiceReference1.Employee[] GetProductList() {
            return base.Channel.GetProductList();
        }
        
        public System.Threading.Tasks.Task<EmployeeWebserviceREST.ServiceReference1.Employee[]> GetProductListAsync() {
            return base.Channel.GetProductListAsync();
        }
        
        public bool AddEmployee(EmployeeWebserviceREST.ServiceReference1.Employee eml) {
            return base.Channel.AddEmployee(eml);
        }
        
        public System.Threading.Tasks.Task<bool> AddEmployeeAsync(EmployeeWebserviceREST.ServiceReference1.Employee eml) {
            return base.Channel.AddEmployeeAsync(eml);
        }
        
        public bool UpdateEmployee(EmployeeWebserviceREST.ServiceReference1.Employee eml) {
            return base.Channel.UpdateEmployee(eml);
        }
        
        public System.Threading.Tasks.Task<bool> UpdateEmployeeAsync(EmployeeWebserviceREST.ServiceReference1.Employee eml) {
            return base.Channel.UpdateEmployeeAsync(eml);
        }
        
        public bool DeleteEmployee(int idE) {
            return base.Channel.DeleteEmployee(idE);
        }
        
        public System.Threading.Tasks.Task<bool> DeleteEmployeeAsync(int idE) {
            return base.Channel.DeleteEmployeeAsync(idE);
        }
    }
}
